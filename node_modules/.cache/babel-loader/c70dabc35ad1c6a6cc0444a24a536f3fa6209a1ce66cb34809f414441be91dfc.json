{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SWATHI\\\\OneDrive\\\\Desktop\\\\armstrong-git\\\\armstrong-final\\\\src\\\\pages\\\\dashbord.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\n// Function to fetch user Armstrong numbers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getUserArmstrongNumbers = async userId => {\n  const response = await axios.get(`http://localhost:8080/user/${userId}/numbers`);\n  return response.data; // Return the response data\n};\nconst UserNumbers = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [numbers, setNumbers] = useState([]); // State to hold fetched numbers\n\n  // Function to fetch numbers\n  const fetchNumbers = async () => {\n    try {\n      const result = await getUserArmstrongNumbers(userId);\n      console.log(\"Fetched Numbers:\", result); // Debug log\n      setNumbers(result); // Update the numbers state\n    } catch (error) {\n      console.error(\"Error fetching numbers:\", error); // Log error for debugging\n      alert(\"Failed to fetch numbers. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User's Armstrong Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"User ID\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchNumbers,\n      children: \"Fetch Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: numbers.length > 0 ? numbers.map(num => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: num.Number || \"No number available\"\n      }, num.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No Armstrong numbers found for this user.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(UserNumbers, \"YoERNL/OC1q7er4FiCzLFmLGFhA=\");\n_c = UserNumbers;\nexport default UserNumbers;\nvar _c;\n$RefreshReg$(_c, \"UserNumbers\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","getUserArmstrongNumbers","userId","response","get","data","UserNumbers","_s","setUserId","numbers","setNumbers","fetchNumbers","result","console","log","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","num","Number","ID","_c","$RefreshReg$"],"sources":["C:/Users/SWATHI/OneDrive/Desktop/armstrong-git/armstrong-final/src/pages/dashbord.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Function to fetch user Armstrong numbers\r\nexport const getUserArmstrongNumbers = async (userId) => {\r\n  const response = await axios.get(\r\n    `http://localhost:8080/user/${userId}/numbers`\r\n  );\r\n  return response.data; // Return the response data\r\n};\r\n\r\nconst UserNumbers = () => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [numbers, setNumbers] = useState([]); // State to hold fetched numbers\r\n\r\n  // Function to fetch numbers\r\n  const fetchNumbers = async () => {\r\n    try {\r\n      const result = await getUserArmstrongNumbers(userId);\r\n      console.log(\"Fetched Numbers:\", result); // Debug log\r\n      setNumbers(result); // Update the numbers state\r\n    } catch (error) {\r\n      console.error(\"Error fetching numbers:\", error); // Log error for debugging\r\n      alert(\"Failed to fetch numbers. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>User's Armstrong Numbers</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"User ID\"\r\n        value={userId}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n      />\r\n      <button onClick={fetchNumbers}>Fetch Numbers</button>\r\n      <ul>\r\n  {numbers.length > 0 ? (\r\n    numbers.map((num) => (\r\n      <li key={num.ID}>{num.Number || \"No number available\"}</li>\r\n    ))\r\n  ) : (\r\n    <li>No Armstrong numbers found for this user.</li>\r\n  )}\r\n</ul>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserNumbers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,uBAAuB,GAAG,MAAOC,MAAM,IAAK;EACvD,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAC9B,8BAA8BF,MAAM,UACtC,CAAC;EACD,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACL,MAAM,EAAEM,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMX,uBAAuB,CAACC,MAAM,CAAC;MACpDW,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,MAAM,CAAC,CAAC,CAAC;MACzCF,UAAU,CAACE,MAAM,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC,CAAC;MACjDC,KAAK,CAAC,4CAA4C,CAAC;IACrD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAEtB,MAAO;MACduB,QAAQ,EAAGC,CAAC,IAAKlB,SAAS,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrB,OAAA;MAAQ4B,OAAO,EAAEjB,YAAa;MAAAM,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDrB,OAAA;MAAAiB,QAAA,EACHR,OAAO,CAACoB,MAAM,GAAG,CAAC,GACjBpB,OAAO,CAACqB,GAAG,CAAEC,GAAG,iBACd/B,OAAA;QAAAiB,QAAA,EAAkBc,GAAG,CAACC,MAAM,IAAI;MAAqB,GAA5CD,GAAG,CAACE,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CAC3D,CAAC,gBAEFrB,OAAA;QAAAiB,QAAA,EAAI;MAAyC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAClD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEI,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCID,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}