{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SWATHI\\\\OneDrive\\\\Desktop\\\\armstrong-git\\\\armstrong-final\\\\src\\\\pages\\\\frontend\\\\armstrong.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyArmstrong = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const requestBody = {\n        user_id: Number(userId),\n        // Use `user_id` as required by the backend\n        number: Number(number) // Ensure the number is sent as an integer\n      };\n      console.log(\"Request Body:\", requestBody);\n      const result = await axios.post(\"http://localhost:8080/verify\", requestBody, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Server Response:\", result); // Log the full server response\n      setResponse(\"Success: \" + (result.data.message || \"No message received\")); // Set success response\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error Response:\", error.response); // Log the error response\n      setResponse(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"An error occurred during verification\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Verify Armstrong Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"User ID\",\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter number\",\n        value: number,\n        onChange: e => setNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyArmstrong, \"QRO97tmtwbErdTCkieWhlXetaXI=\");\n_c = VerifyArmstrong;\nexport default VerifyArmstrong;\nvar _c;\n$RefreshReg$(_c, \"VerifyArmstrong\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VerifyArmstrong","_s","userId","setUserId","number","setNumber","response","setResponse","handleSubmit","e","preventDefault","requestBody","user_id","Number","console","log","result","post","headers","data","message","error","_error$response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/SWATHI/OneDrive/Desktop/armstrong-git/armstrong-final/src/pages/frontend/armstrong.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst VerifyArmstrong = () => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const requestBody = {\r\n        user_id: Number(userId), // Use `user_id` as required by the backend\r\n        number: Number(number), // Ensure the number is sent as an integer\r\n      };\r\n  \r\n      console.log(\"Request Body:\", requestBody);\r\n  \r\n      const result = await axios.post(\"http://localhost:8080/verify\", requestBody, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n  \r\n      console.log(\"Server Response:\", result); // Log the full server response\r\n      setResponse(\"Success: \" + (result.data.message || \"No message received\")); // Set success response\r\n    } catch (error) {\r\n      console.error(\"Error Response:\", error.response); // Log the error response\r\n      setResponse(\r\n        error.response?.data || \"An error occurred during verification\"\r\n      );\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Verify Armstrong Number</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"User ID\"\r\n          value={userId}\r\n          onChange={(e) => setUserId(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter number\"\r\n          value={number}\r\n          onChange={(e) => setNumber(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Verify</button>\r\n      </form>\r\n      {response && <p>{response}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyArmstrong;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAI5C,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,WAAW,GAAG;QAClBC,OAAO,EAAEC,MAAM,CAACX,MAAM,CAAC;QAAE;QACzBE,MAAM,EAAES,MAAM,CAACT,MAAM,CAAC,CAAE;MAC1B,CAAC;MAEDU,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,WAAW,CAAC;MAEzC,MAAMK,MAAM,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,8BAA8B,EAAEN,WAAW,EAAE;QAC3EO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,MAAM,CAAC,CAAC,CAAC;MACzCT,WAAW,CAAC,WAAW,IAAIS,MAAM,CAACG,IAAI,CAACC,OAAO,IAAI,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdR,OAAO,CAACO,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACf,QAAQ,CAAC,CAAC,CAAC;MAClDC,WAAW,CACT,EAAAe,eAAA,GAAAD,KAAK,CAACf,QAAQ,cAAAgB,eAAA,uBAAdA,eAAA,CAAgBH,IAAI,KAAI,uCAC1B,CAAC;IACH;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC5B,OAAA;MAAM6B,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBAC3BxB,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,SAAS;QACrBC,KAAK,EAAE7B,MAAO;QACd8B,QAAQ,EAAGvB,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACwB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACF5B,OAAA;QACE8B,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAE3B,MAAO;QACd4B,QAAQ,EAAGvB,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACF5B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACNrB,QAAQ,iBAAIP,OAAA;MAAAwB,QAAA,EAAIjB;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtDID,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AAwDrB,eAAeA,eAAe;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}